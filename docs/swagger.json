{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/admin/brand": {
            "post": {
                "description": "Creates a new brand with the provided details. Only accessible by admin.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "brands"
                ],
                "summary": "Create a new brand",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer {JWT}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Brand data",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.BrandInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Brand created successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid input data",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "You are not authorized to access this resource",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Failed to create brand",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a brand by ID. Only accessible by admin.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "brands"
                ],
                "summary": "Delete a brand",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer {JWT}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Brand ID",
                        "name": "brand_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Brand deleted successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid brand ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "You are not authorized to access this resource",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Failed to delete brand",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/admin/category": {
            "post": {
                "description": "Create a new category in the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Categories"
                ],
                "summary": "Create a new category",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer {JWT}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Category data",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.CategoryInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category created successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid input data",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "You are not authorized to access this resource",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to create category",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a category by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Categories"
                ],
                "summary": "Delete a category",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer {JWT}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Category ID",
                        "name": "category_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category deleted successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid category ID",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "You are not authorized to access this resource",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to delete category",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/material": {
            "post": {
                "description": "Create a new material in the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Materials"
                ],
                "summary": "Create a new material",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer {JWT}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Material data",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.MaterialInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Material created successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid input data",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "You are not authorized to access this resource",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to create material",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a material from the system by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Materials"
                ],
                "summary": "Delete a material by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer {JWT}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Material ID",
                        "name": "material_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Material deleted successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid material ID",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "You are not authorized to access this resource",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to delete material",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/sign-up": {
            "post": {
                "description": "Registers a new admin user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Sign up as an admin",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer {JWT}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Admin signup data",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.AdminLoginRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Admin signed up successfully",
                        "schema": {
                            "$ref": "#/definitions/handler.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid input data",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "You are not authorized to access this resource",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to sign up",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/brand": {
            "get": {
                "description": "Retrieves a list of all brands. Only accessible by admin.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "brands"
                ],
                "summary": "Get list of brands",
                "responses": {
                    "200": {
                        "description": "List of brands",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.BrandOutput"
                            }
                        }
                    },
                    "401": {
                        "description": "You are not authorized to access this resource",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Failed to get brand list",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/buyer": {
            "get": {
                "description": "Retrieve buyer information by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Buyers"
                ],
                "summary": "Get buyer information",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer {JWT}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Buyer data",
                        "schema": {
                            "$ref": "#/definitions/model.BuyerOutput"
                        }
                    },
                    "403": {
                        "description": "You are not authorized to access this resource",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Buyer not found",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update buyer details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Buyers"
                ],
                "summary": "Update buyer information",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer {JWT}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Buyer data",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.BuyerInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Buyer updated successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid input data",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "You are not authorized to access this resource",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to update buyer",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/buyer/order": {
            "get": {
                "description": "Retrieve an order by its ID for the buyer",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Orders"
                ],
                "summary": "Get an order by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer {JWT}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Order ID",
                        "name": "order_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order data",
                        "schema": {
                            "$ref": "#/definitions/model.OrderOutput"
                        }
                    },
                    "400": {
                        "description": "Invalid order ID",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "You are not authorized to access this resource",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Order not found",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create an order from the items in the cart of the current buyer",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Orders"
                ],
                "summary": "Create a new order",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer {JWT}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order created successfully",
                        "schema": {
                            "$ref": "#/definitions/handler.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Cart is empty",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "You are not authorized to access this resource",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/buyer/review": {
            "post": {
                "description": "Позволяет покупателю создать отзыв для товара.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "reviews"
                ],
                "summary": "Создание нового отзыва",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer {JWT}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Информация о отзыве",
                        "name": "review",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Review"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Review created successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/cart": {
            "get": {
                "description": "Retrieves the contents of the buyer's cart. Only accessible by buyers.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cart"
                ],
                "summary": "Get cart contents",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer {JWT}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Cart items",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.CartOutput"
                            }
                        }
                    },
                    "403": {
                        "description": "You are not authorized to access this resource",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/cart/add": {
            "post": {
                "description": "Adds a specified item with a specified quantity to the buyer's cart. Only accessible by buyers.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cart"
                ],
                "summary": "Add an item to cart",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer {JWT}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Item ID and Quantity",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.AddToCartInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Item added to cart",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "You are not authorized to access this resource",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/cart/remove": {
            "delete": {
                "description": "Removes a specified item from the buyer's cart by cart item ID. Only accessible by buyers.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cart"
                ],
                "summary": "Remove an item from the cart",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer {JWT}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Cart Item ID",
                        "name": "cart_item_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Item removed from cart",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid cart item ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "You are not authorized to access this resource",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/category": {
            "get": {
                "description": "Retrieve a list of all categories",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Categories"
                ],
                "summary": "Get category list",
                "responses": {
                    "200": {
                        "description": "List of categories",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.CategoryOutput"
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve category list",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/item": {
            "get": {
                "description": "Retrieve an item by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Items"
                ],
                "summary": "Get item by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Item ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Item details",
                        "schema": {
                            "$ref": "#/definitions/model.CurrentItemInfo"
                        }
                    },
                    "400": {
                        "description": "Invalid item ID",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Item not found",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Retrieve a list of items, optionally filtered",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Items"
                ],
                "summary": "Get item list",
                "parameters": [
                    {
                        "description": "Filter criteria",
                        "name": "filters",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.FilterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of items",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.ItemInfo"
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to get items",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/material": {
            "get": {
                "description": "Retrieve a list of materials from the system",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Materials"
                ],
                "summary": "Get material list",
                "responses": {
                    "200": {
                        "description": "List of materials",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.MaterialOutput"
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve material list",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/review": {
            "get": {
                "description": "Позволяет получить список отзывов для указанного товара по его ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "reviews"
                ],
                "summary": "Получение отзывов для товара",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID товара",
                        "name": "item_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список отзывов для товара",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Review"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid item ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/seller": {
            "get": {
                "description": "Retrieve seller details by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sellers"
                ],
                "summary": "Get seller information",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer {JWT}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Seller data",
                        "schema": {
                            "$ref": "#/definitions/model.SellerOutput"
                        }
                    },
                    "403": {
                        "description": "You are not authorized to access this resource",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve seller",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update the details of the seller",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sellers"
                ],
                "summary": "Update seller information",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer {JWT}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Updated seller data",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.SellerInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Seller updated successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid input data",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "You are not authorized to access this resource",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to update seller",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/seller/item": {
            "post": {
                "description": "Create a new item in the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Items"
                ],
                "summary": "Create a new item",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer {JWT}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Item data",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.ItemInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Item created successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid input data",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "You are not authorized to access this resource",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to create item",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update an item by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Items"
                ],
                "summary": "Update an existing item",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer {JWT}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Item ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Item data",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.ItemInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Item updated successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid input data",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "You are not authorized to access this resource",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Item not found",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to update item",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/seller/item/image": {
            "post": {
                "description": "Upload an image for a specific item by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Items"
                ],
                "summary": "Upload an image for an item",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer {JWT}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Item ID",
                        "name": "item_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Image file",
                        "name": "image",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "url\": \"url",
                        "schema": {
                            "$ref": "#/definitions/handler.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid item ID or failed to upload image",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "You are not authorized to access this resource",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Item not found",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to save image",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/seller/statistic": {
            "get": {
                "description": "Retrieve seller earnings for the current and previous week",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sellers"
                ],
                "summary": "Get seller earnings",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer {JWT}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Earnings for current and last week",
                        "schema": {
                            "$ref": "#/definitions/model.Statistic"
                        }
                    },
                    "403": {
                        "description": "You are not authorized to access this resource",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve earnings",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/sign-in/admin": {
            "post": {
                "description": "Logs in an admin user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Sign in as an admin",
                "parameters": [
                    {
                        "description": "Admin login data",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.AdminLoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Authentication token",
                        "schema": {
                            "$ref": "#/definitions/handler.TokenResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid login data",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/sign-in/buyer": {
            "post": {
                "description": "Authenticate a buyer with email and password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Buyers"
                ],
                "summary": "Buyer login",
                "parameters": [
                    {
                        "description": "Login data",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Authenticated buyer data",
                        "schema": {
                            "$ref": "#/definitions/model.BuyerOutput"
                        }
                    },
                    "400": {
                        "description": "Invalid login data",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/sign-in/seller": {
            "post": {
                "description": "Authenticate a seller with their email and password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sellers"
                ],
                "summary": "Seller sign in",
                "parameters": [
                    {
                        "description": "Login credentials",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.SellerSignInResponse"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Seller data",
                        "schema": {
                            "$ref": "#/definitions/model.Seller"
                        }
                    },
                    "400": {
                        "description": "Invalid input data",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/sign-up/buyer": {
            "post": {
                "description": "Register a new buyer in the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Buyers"
                ],
                "summary": "Create a new buyer",
                "parameters": [
                    {
                        "description": "Buyer data",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.BuyerInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Buyer signed up successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid input data",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to sign up",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/sign-up/seller": {
            "post": {
                "description": "Register a new seller with the provided details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sellers"
                ],
                "summary": "Register a new seller",
                "parameters": [
                    {
                        "description": "Seller data",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.SellerInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Seller registered successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid input data",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to register seller",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handler.ErrorResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "handler.SuccessResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "handler.TokenResponse": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "model.AddToCartInput": {
            "type": "object",
            "properties": {
                "item_id": {
                    "type": "integer"
                },
                "quantity": {
                    "type": "integer"
                }
            }
        },
        "model.AdminLoginRequest": {
            "type": "object",
            "properties": {
                "login": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "model.Brand": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Item"
                    }
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "model.BrandInput": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "model.BrandOutput": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "model.Buyer": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "favorites": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Item"
                    }
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "orders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Order"
                    }
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "model.BuyerInput": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "model.BuyerOutput": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "favorites": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.ItemInfo"
                    }
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "orders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.OrderOutput"
                    }
                }
            }
        },
        "model.CartItemInfo": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "quantity": {
                    "type": "integer"
                }
            }
        },
        "model.CartOutput": {
            "type": "object",
            "properties": {
                "buyer_id": {
                    "type": "string"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.CartItemInfo"
                    }
                }
            }
        },
        "model.Category": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Item"
                    }
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "model.CategoryInput": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "model.CategoryOutput": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "model.CurrentItemInfo": {
            "type": "object",
            "properties": {
                "article": {
                    "type": "string"
                },
                "brand": {
                    "type": "string"
                },
                "category": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "height": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "images": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "length": {
                    "type": "integer"
                },
                "material": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "price_with_discount": {
                    "type": "number"
                },
                "quantity": {
                    "type": "integer"
                },
                "seller": {
                    "type": "string"
                },
                "seller_id": {
                    "type": "string"
                },
                "weight": {
                    "type": "integer"
                },
                "width": {
                    "type": "integer"
                }
            }
        },
        "model.FilterRequest": {
            "type": "object",
            "properties": {
                "brands": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "categories": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "materials": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "max_price": {
                    "type": "number"
                },
                "min_price": {
                    "type": "number"
                },
                "sellers": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "model.Image": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "item": {
                    "$ref": "#/definitions/model.Item"
                },
                "item_id": {
                    "type": "integer"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "model.Item": {
            "type": "object",
            "properties": {
                "article": {
                    "type": "string"
                },
                "brand": {
                    "$ref": "#/definitions/model.Brand"
                },
                "brand_id": {
                    "type": "integer"
                },
                "category": {
                    "$ref": "#/definitions/model.Category"
                },
                "category_id": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "favoritedBy": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Buyer"
                    }
                },
                "height": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "images": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Image"
                    }
                },
                "length": {
                    "type": "integer"
                },
                "material": {
                    "$ref": "#/definitions/model.Material"
                },
                "material_id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "price_with_discount": {
                    "type": "number"
                },
                "quantity": {
                    "type": "integer"
                },
                "seller": {
                    "$ref": "#/definitions/model.Seller"
                },
                "seller_id": {
                    "type": "string"
                },
                "weight": {
                    "type": "integer"
                },
                "width": {
                    "type": "integer"
                }
            }
        },
        "model.ItemInfo": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                }
            }
        },
        "model.ItemInput": {
            "type": "object",
            "properties": {
                "article": {
                    "type": "string"
                },
                "brand_id": {
                    "type": "integer"
                },
                "category_id": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "height": {
                    "type": "integer"
                },
                "length": {
                    "type": "integer"
                },
                "material_id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "price_with_discount": {
                    "type": "number"
                },
                "quantity": {
                    "type": "integer"
                },
                "weight": {
                    "type": "integer"
                },
                "width": {
                    "type": "integer"
                }
            }
        },
        "model.LoginRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "model.Material": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Item"
                    }
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "model.MaterialInput": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "model.MaterialOutput": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "model.Order": {
            "type": "object",
            "properties": {
                "buyer": {
                    "$ref": "#/definitions/model.Buyer"
                },
                "buyer_id": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "order_items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.OrderItem"
                    }
                },
                "status": {
                    "type": "string"
                },
                "total": {
                    "type": "number"
                }
            }
        },
        "model.OrderItem": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "item": {
                    "$ref": "#/definitions/model.Item"
                },
                "item_id": {
                    "type": "integer"
                },
                "order": {
                    "$ref": "#/definitions/model.Order"
                },
                "order_id": {
                    "type": "integer"
                },
                "quantity": {
                    "type": "integer"
                },
                "seller_id": {
                    "type": "string"
                },
                "total": {
                    "type": "number"
                },
                "unit_price": {
                    "type": "number"
                }
            }
        },
        "model.OrderItemInfo": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "quantity": {
                    "type": "integer"
                }
            }
        },
        "model.OrderOutput": {
            "type": "object",
            "properties": {
                "buyer_id": {
                    "type": "string"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.OrderItemInfo"
                    }
                },
                "status": {
                    "type": "string"
                },
                "total": {
                    "type": "number"
                }
            }
        },
        "model.Review": {
            "type": "object",
            "properties": {
                "buyer_id": {
                    "type": "string"
                },
                "comment": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "item_id": {
                    "type": "integer"
                },
                "rating": {
                    "type": "number"
                }
            }
        },
        "model.Seller": {
            "type": "object",
            "properties": {
                "balance": {
                    "type": "number"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Item"
                    }
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "shop_name": {
                    "type": "string"
                }
            }
        },
        "model.SellerInput": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "shop_name": {
                    "type": "string"
                }
            }
        },
        "model.SellerOutput": {
            "type": "object",
            "properties": {
                "balance": {
                    "type": "number"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.ItemInfo"
                    }
                },
                "name": {
                    "type": "string"
                },
                "shop_name": {
                    "type": "string"
                }
            }
        },
        "model.SellerSignInResponse": {
            "type": "object",
            "properties": {
                "seller": {
                    "$ref": "#/definitions/model.SellerOutput"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "model.Statistic": {
            "type": "object",
            "properties": {
                "current_week": {
                    "type": "number"
                },
                "last_week": {
                    "type": "number"
                }
            }
        }
    }
}